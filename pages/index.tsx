import { useState } from 'react';
import { ApolloClient, InMemoryCache, gql } from '@apollo/client';
import type { GetStaticProps, NextPage } from 'next';

import Head from 'next/head';
import styles from '../styles/Home.module.css';

// import types for defining the return type and structure type of the variables and returned value.
import { Characters } from '../types';
import { Box, SimpleGrid, Image, Heading } from '@chakra-ui/react';

// Here we define what value is being passed onto the Home page and what needs to be taken out of props.
const Home: NextPage<{ characters: Characters[] }> = ({ characters }) => {
  // define result variable type as an array of Characters.
  const result: Characters[] = characters;

  // here we have defined that the value held by the variable allCharacters and the value
  // passed to setAllCharacters function will be an array of Characters.
  const [allCharacters, setAllCharacters] = useState<Characters[]>(characters);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <Heading as='h1' mb='10'>
          Rick and Morty characters
        </Heading>
        <Box>
          <SimpleGrid columns={4} spacing={6}>
            {allCharacters.map(character => (
              <Box>
                <Image
                  src={character.image as string}
                  alt={character.name as string}
                  boxSize='150px'
                />
                <Heading size='md'>{character.name}</Heading>
              </Box>
            ))}
          </SimpleGrid>
        </Box>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

// define the function type as GetStaticProps taken from the next package.
export const getStaticProps: GetStaticProps = async context => {
  const URI: string = 'https://rickandmortyapi.com/graphql';

  // here the type passed to ApolloClient is any but there should be something better
  // that can be passed here which better defines the type given and returned by the function.
  const client = new ApolloClient<any>({
    uri: URI,
    cache: new InMemoryCache()
  });

  const { data } = await client.query({
    query: gql`
      query {
        characters(page: 1) {
          info {
            count
            pages
          }
          results {
            id
            name
            status
            species
            type
            origin {
              id
              name
            }
            location {
              id
              name
            }
            image
            episode {
              id
              episode
              air_date
            }
          }
        }
      }
    `
  });

  console.log(data.characters.results);

  return {
    props: {
      characters: data.characters.results
    }
  };
};

export default Home;
